name: composer
description: |
  Install composer dependencies

  This action need checkout and php setup
  ```yaml
  steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '7.4'
  ```

inputs:
  production:
    description: |
      Run composer optimized for production when "true"
    required: false
    default: 'false'
  gpr-key:
    description: Personal access token to fetch private repos
    required: false
    default: ''
  working-directory:
    description: Used to change the working directory where composer will run.
    required: false
    default: .

runs:
  using: "composite"
  steps:
    - name: Get composer cache directory
      id: setup
      working-directory: ${{ inputs.working-directory }}
      run: |
        CACHE_KEY=${{ runner.os }}-composer-${{ hashFiles(format('{0}/**/composer.lock', inputs.working-directory)) }}
        INSTALL_ARGS=""
        AUTOLOAD_ARGS=""
        if [[ "${{ inputs.production }}" == "true" ]] ; then
          CACHE_KEY="$CACHE_KEY-production"
          INSTALL_ARGS="--no-dev --no-autoloader"
          DUMP_AUTOLOAD_ARGS="--optimize --no-dev"
        fi
        echo "cache-dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
        echo "cache-key=$CACHE_KEY" >> $GITHUB_OUTPUT
        echo "install-args=$INSTALL_ARGS" >> $GITHUB_OUTPUT
        echo "dump-autoload-args=$DUMP_AUTOLOAD_ARGS" >> $GITHUB_OUTPUT
      shell: bash

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ${{ steps.setup.outputs.cache-dir }}
        key: ${{ steps.setup.outputs.cache-key }}
        restore-keys: ${{ runner.os }}-composer-

    - name: Add HTTP basic auth credentials
      if: inputs.gpr-key != ''
      run: |
        echo '{ "http-basic": { "github.com": { "username": "build", "password": "${{ inputs.gpr-key }}" }}}' > $GITHUB_WORKSPACE/auth.json
      shell: bash

    - name: Install
      working-directory: ${{ inputs.working-directory }}
      run: composer install -n --prefer-dist ${{ steps.setup.outputs.install-args }}
      shell: bash

    - name: Dump autoload
      working-directory: ${{ inputs.working-directory }}
      run: composer -n dump-autoload ${{ steps.setup.outputs.dump-autoload-args }}
      shell: bash
